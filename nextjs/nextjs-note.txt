single-page JavaScript applications

SPA 

需要注意

  client-side routing
  page layout 
  APIs 
  server-side render
  statically prerender (平衡 SEO 和 速度)

例如 PHP, create some files, write PHP code, then simply deploy it.

Next.js 

page-based routing system,支持 动态路由
页面自动静态优化
服务端渲染
自动拆分代码，加速载入
客户端路由，页面预加载
支持热替换的开发环境，基于 Webpack 
API 路由，支持无服务函数开发 API，路由与页面路由类似
社区定制插件，自定义 Babel 和 Webpack 配置

1.1 Setup 

mkdir hello-next
cd hello-next
npm init -y
npm install --save react react-dom next
mkdir pages

package.json 

"scripts": {
  "dev": "next",
  "build": "next build",
  "start": "next start"
}

npm run dev 

1.2 创建第一个页面

2.1 页面间跳转

创建 about page : pages/about.js

HTML 标签 a 不会进行客户端跳转而会向服务端发送请求，需要使用 Next.js's Link API

next/link <Link />

它会预加载页面，并进行无页面刷新的跳转

点击回退按钮时：
next/link does all the location.history handling for you

Link 是 HOC Higher Order Component

Link 内部组件需要支持 onClick prop

3.1 使用共享组件 Shared Component 

创建一个共享 Header component 







https://github.com/milvus-io/milvus

miniapp

Random API
History 

Quote
  shuffle
  submit

  content 
  owner
  source
  source_note 
  like
  export
 