https://thoughtbot.com/blog/how-to-make-a-chrome-extension

https://developer.chrome.com/extensions/getstarted

http://open.chrome.360.cn/extension_dev 镜像文档

## start 

1. create manifest.json (use generator)

use alpine.js / tailwindcss

载入插件

open chrome://extensions

Enable Developer Mode by clicking the toggle switch next to Developer mode

Click the LOAD UNPACKED button and select the extension directory.

2. 创建 background.js 

(https://developer.chrome.com/extensions/background_pages)

插件是基于 event 的。

Extensions monitor these events in their background script, then react with specified instructions.

Background scripts are registered in the manifest under the "background" field. They are listed in an array after the "scripts" key, and "persistent" should be specified as false.

"background": {
  "scripts": ["background.js"],
  "persistent": false
},

设置权限

"permissions": ["storage"],

重新载入插件

Navigate back to the extension management page and click the Reload link.

会看到 Inspect views 链接

3. 创建 User Interface

(https://developer.chrome.com/extensions/user_interface)

多种 user interface

创建 popup.html 

designated as a popup in the manifest under page_action

仅针对部分网页 page_action 

针对全部网页 browser_action (图标常亮)

"page_action": {
  "default_popup": "popup.html",
  // 各规格图标
  "default_icon": {
    "16": "images/get_started16.png",
    "32": "images/get_started32.png",
    "48": "images/get_started48.png",
    "128": "images/get_started128.png"
  }
},
// extension management page icon 
"icons": {
  "16": "images/get_started16.png",
  "32": "images/get_started32.png",
  "48": "images/get_started48.png",
  "128": "images/get_started128.png"
},

it is up to the extension to tell the browser when the user can interact with popup.html

增加权限

"permissions": ["declarativeContent", "storage"],

给 popup.html 添加交互

popup.js 不需要写入 manifest.json

activeTab permission to allow the extension temporary access to the tabs API

"activeTab"

4. Give Users Options

Including an options page

options.html

配置 manifest.json 

"options_page": "options.html",

进入 options 页面

Detail -> Extension options

修改 option 不需要 reload

5. More 

contentScript 在当前网页中运行，可以和 background.js 交互

快捷键设置 https://developer.chrome.com/extensions/commands

  输出到 background.js console 

替代页面 每个插件可以替代一个

  http://open.chrome.360.cn/extension_dev/override.html

  要制作一个优秀的替代页，请一定遵循如下指导原则：

  你的页面实现的要即小又快。
  用户希望内建的浏览器页面可以快速的打开，请避免做一些要消耗很多时间的事。如：尽量避免从网络中或者数据库资源中提取数据。

  页面要带标题。
  否则用户可能会看到网页的URL，造成困扰。其实就是在页面头上加入：<title>NewTab</title>

  别指望页面会获得键盘输入焦点。
  通常新标签创建的时候，地址栏会获得输入焦点，而不是页面。

  别试着模仿默认的新标签页。
  对于新标签页上的重要功能支持，如：最近关闭的标签、主题背景图等，APIs的支持尚未完善，在这些APIs确认完备之前，你最好做一些完全不同的新标签页设计（以避免使用这些非正式的APIs）。

  newtab 修改也不需要 reload 插件

theme 

  http://open.chrome.360.cn/extension_dev/themes.html



Refs:

reload: https://stackoverflow.com/questions/2963260/how-do-i-auto-reload-a-chrome-extension-im-developing javascript - How do I auto-reload a Chrome extension I'm developing? - Stack Overflow

http://www.voidcn.com/article/p-ruwkxwgf-bta.html Google Chrome扩展程序 – Chrome扩展程序页面操作出现在地址栏之外

Resource:

图标
  https://tablericons.com/ 550+ Highly customizable free SVG icons