Eleventy is a simpler static site generator.

- 全局安装
npm install -g @11ty/eleventy # yarn global add @11ty/eleventy
echo '# Page header' > README.md
eleventy

- degit 方式
npx degit 11ty/eleventy-base-blog blog && cd blog
yarn 
npx @11ty/eleventy --serve

- 本地安装
mkdir eleventy-sample
cd eleventy-sample

yarn init -fy

yarn add -D @11ty/eleventy

npx @11ty/eleventy

创建模板

echo '<!doctype html><html><head><title>Demo</title></head><body><p>Hi Demo</p></body></html>' > index.html 

echo '# Header' > README.md

npx @11ty/eleventy --serve 

启动 hot-reloading local web server 

(Editing README.md won't refresh your browser automatically, because Browsersync requires a <body> tag in your template for live-reload to work properly)


## Command Line Usage

  # Searches the current directory, outputs to ./_site
  npx @11ty/eleventy

  # Global installation 不需要 npx 
  eleventy

  npx @11ty/eleventy --input=. --output=_site

  npx @11ty/eleventy --input=SINGLE.md --output=_site

配置文件 .eleventy.js

module.exports = {
    dir: {
        input: "views"
    }
};

部署到 surge 

echo your-own-domain.com > _site/CNAME

npx @11ty/eleventy && surge _site


https://www.11ty.dev/docs/templates/
https://www.11ty.dev/docs/tutorials/

## Tutorials 

- Blog 

https://keepinguptodate.com/pages/2019/06/creating-blog-with-eleventy/

configured via an .eleventy.js config file in the root directory

配置 
  default output folder is _site
  default input folder is the root directory

- eleventy-base-blog

npx degit 11ty/eleventy-base-blog blog

Edit the _data/metadata.json with your blog’s information.
(Optional) Edit .eleventy.js with your configuration preferences.
Delete this message from _includes/layouts/base.njk.


https://www.11ty.dev/docs/advanced-order/ Order of Operations | Eleventy, a simpler static site generator.

- Build a blog
  https://stubborncode.com/posts/build-a-blog-with-eleventy-and-tailwindcss-part-1/#install-eleventy

11ty tailwind
11ty headless cms

Part1

yarn init -fy
yarn global add @11ty/eleventy
yarn add tailwindcss postcss-cli autoprefixer
npx tailwind init
npx tailwind init --postcss 同时创建 postcss.config.js

npm run build 生成编译后的 css

Part2

site URL structure

由 input folder 决定

要得到 example.com/posts/name-of-post

可以创建 posts/name-of-post.md

或者 posts/name-of-post/index.md

npx eleventy

mkdir -p posts/first-post

touch posts/first-post/index.md

生成文字占位 http://lorizzle.nl/?feed=1

创建 post layout

默认路径 _includes

mkdir -p _includes/layouts
touch _includes/layouts/post.liquid

Liquid tags and front matter

tags 是 liquid 中可以执行的代码

front matter 是文本头部一些元信息

  如指定 layout title 等

---
layout: layouts/post.liquid
---

使用 partial 实现 header footer

_includes/partials

使用 

{% include partials/_header.html %}

Part3 样式 tailwind

在 tailwind.config.js 中增加扩展颜色

.text-<color>-<modifier>

.text-brand-light

使用自定义字体 Nunito and Marske .woff2 or .woff fonts 格式

添加字体到 tailwind 默认字体中，并保证 fallback 到原字体

const defaultTheme = require("tailwindcss/defaultTheme");

["Nunito", ...defaultTheme.fontFamily.sans] 添加到默认字体族中

通过 .eleventy.js 配置 11ty 复制字体文件

export an object or a function

// Copy `css/fonts/` to `_site/css/fonts`

Passthrough file copy 的起始路径是项目根目录，不是 input 目录

现在可以在 css 中引入字体

自定义样式写在 base components 之间

npm run build 编译 tailwind

npx eleventy --serve

在 post.liquid head  中引入 css

设置 header 为 flex container

flex items-center justify-between

default spacing scale goes from 0 to 256px/16rem. One spacing unit is 4px or 0.25rem and values are proportional.

px-8 即 2rem 

给 markdown 内容添加样式

给 content 添加 div 再添加样式

postcss-nesting that will let us nest style rules inside each other.

使用 tailwind @apply 创建 markdown component

写在 @tailwind components; 后

postcss-nesting 支持写成

.markdown {
  @apply ...;
  & strong {}
}

@screen sm {
   /* ... */
}

就是

@media (min-width: 640px) {
  /* ... */
}

给 content 添加 div.markdown

外边再套一个 container 来显示 title 

title 来自 front matter

title 下显示更多信息 info section
  发布时间
  阅读时间
  视频时长(如果有视频)

在 tailwind config 中添加 

screens: {
  xs: "480px",
  ...defaultTheme.screens,
},

Part4

Liquid 模板的 filter 语法

<p>{{ output | filter }}</p>

时间格式化基于 Ruby's strftime method

http://www.strfti.me/

{{ date | date: "%d %B, %Y" }}

自定义 filter 计算阅读时间

.eleventy.js

a minute to read 250 words

eleventy 自定义 filter 就是 JS methods

eleventyConfig.addFilter(filterName, filterFunction)

{{ value | filterName}}

https://stubborncode.com/posts/build-a-blog-with-eleventy-and-tailwindcss-part-4/

Part5 

Eleventy's collections and pagination


https://tailwindcss.com/docs/upgrading-to-v2
https://www.11ty.dev/docs/watch-serve/

http://www.entypo.com/ 411 carefully crafted premium pictograms
https://cloudconvert.com/ CloudConvert is an online file converter


https://runkit.com/home

JavaScript 十个常用小技巧

1. 根据条件添加对象属性

借助于三元操作符

const haveSugar = true

const bill = {
  id: 1,
  name: 'Milk Tea',
  ...(haveSugar && { taste: 'sweet'})
}

haveSugar 为 false 时不影响对象

2. 检查对象是否包含属性

in 关键字

const tea = { name: 'Milk Tea', taste: 'light sweet'}
console.log('taste' in tea)
console.log('cost' in tea)

3. 动态设置对象属性名

4. 根据变量解构对象

5. 空值合并运算符 (Nullish Coalescing)

6. 可选链
7. 布尔值转换
8. 字符串，整数转换
9. 测试是否为真值
10. 


jekyll

https://github.com/mmistakes/minimal-mistakes
https://github.com/kitian616/jekyll-TeXt-theme
https://github.com/kiltandcode/deep-fried-jekyll-theme

https://chrisschuld.com/2019/02/building-your-own-website-in-jekyll/
https://www.section.io/engineering-education/build-a-jekyll-site/
https://www.kiltandcode.com/2020/04/30/how-to-create-a-blog-using-jekyll-and-github-pages-on-windows/

Hanfu
东方神秘元素
  祈福小物件