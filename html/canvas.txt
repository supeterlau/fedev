1.

let canvas = document.getElementById('demo')

if (canvas.getContext) {
      let ctx = canvas.getContext('2d')
    } else {
      console.error('not support canvas')
    }

2. Draw shape

how to draw rectangles, triangles, lines, arcs and curves, providing familiarity with some of the basic shapes

canvas grid or coordinate space

Normally 1 unit in the grid corresponds to 1 pixel on the canvas. The origin of this grid is positioned in the top left corner at coordinate (0,0). All elements are placed relative to this origin

Unlike SVG, <canvas> only supports two primitive shapes: rectangles and paths (lists of points connected by lines)

- rectangles

fillRect(x, y, width, height)
  Draws a filled rectangle.

strokeRect(x, y, width, height)
  Draws a rectangular outline.

clearRect(x, y, width, height)
  Clears the specified rectangular area, making it fully transparent.

- paths

A path is a list of points, connected by segments of lines that can be of different shapes, curved or not, of different width and of different color.

steps

  create path 
    beginPath()
    
    Internally, paths are stored as a list of sub-paths (lines, arcs, etc) which together form a shape. Every time this method is called, the list is reset and we can start drawing new shapes.

  use draw command ()
    https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D#Paths

    actually specify the paths to be draw
  
  after path created, fill or stroke path
    closePath()
      画直线闭合，如果已经闭合或者只有一个点，就 do nothing
    stroke()
    fill()
      调用 fill() 会自动闭合，调用 stroke() 不会

    optional step

  draw commands:

  moveTo(x, y) 

    初始化 canvas 或 beginPath() 后，放置起始点

    删除 moveTo 显示连接起来的线

  lineTo(x, y) coordinates of the line's end point

  arc(x, y, radius, startAngle, endAngle, antiClockwise)

  arcTo(x1, y1, x2, y2, radius)
    连接起点到终点，用直线闭合

  Bezier and quadratic curves

    quadraticCurveTo(cplx, cply, x, y)
      control point (cplx, cply)

    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)
      两个控制点
  
  Path2D objects (新版本浏览器支持，增强性能，可以 重放绘画动作)

    支持 canvas context 全部方法 

    path2d.rect()

    new Path2D()

    new Path2D(path) 另一个 Path2D 对象

    new Path2D(svgString) 

Next: https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors


# Paint

https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle

The Window.getComputedStyle() method returns an object containing the values of all CSS properties of an element, after applying active stylesheets and resolving any basic computation those values may contain



http://www.java2s.com/Tutorials/HTML_CSS/HTML5_Canvas/0630__HTML5_Canvas_Event.htm HTML5 Canvas Tutorial - HTML5 Canvas Events

https://stackoverflow.com/questions/7054272/how-to-draw-smooth-curve-through-n-points-using-javascript-html5-canvas how to draw smooth curve through N points using javascript HTML5 canvas? - Stack Overflow